<?xml version="1.0" encoding="UTF-8"?>
<activity id="17" moduleid="20" modulename="page" contextid="49">
  <page id="17">
    <name>Số trong PHP</name>
    <intro></intro>
    <introformat>1</introformat>
    <content>&amp;lt;?php&lt;br&gt;$x =&amp;nbsp;5985;&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;"5985";&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;"59.85"&amp;nbsp;+&amp;nbsp;100;&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;"Hello";&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;?&amp;gt;&lt;p dir="ltr" style="text-align: left;"&gt;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;&lt;strong&gt;Trong chương này, chúng ta sẽ xem xét sâu hơn về Số nguyên (Integers), Số thực (Floats) và Chuỗi số (Number Strings).&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p dir="ltr" style="text-align: left;"&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1. Số PHP :&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Một điều cần lưu ý về PHP là nó cung cấp tính năng chuyển đổi kiểu dữ liệu tự động.&lt;/li&gt;&lt;li&gt;Vì vậy, nếu bạn gán một giá trị nguyên cho một biến, kiểu của biến đó sẽ tự động là một số nguyên. Sau đó, nếu bạn gán một chuỗi cho cùng một biến, kiểu sẽ thay đổi thành chuỗi.&lt;/li&gt;&lt;li&gt;Chuyển đổi tự động này đôi khi có thể phá vỡ mã của bạn.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;strong&gt;2. Số nguyên (Integers) :&lt;br&gt;&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2, 256, -256, 10358, -179567 đều là số nguyên.&lt;/li&gt;&lt;li&gt;Một số nguyên là một số không có bất kỳ phần thập phân nào.&lt;/li&gt;&lt;li&gt;Kiểu dữ liệu số nguyên là một số không thập phân từ -2147483648 đến 2147483647 trong hệ thống 32 bit và từ -9223372036854775808 đến 9223372036854775807 trong hệ thống 64 bit. Giá trị lớn hơn (hoặc thấp hơn) giá trị này sẽ được lưu trữ dưới dạng float, vì nó vượt quá giới hạn của một số nguyên.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;note &lt;/strong&gt;: Một điều quan trọng khác cần biết là ngay cả khi 4 * 2.5 là 10, kết quả được lưu trữ dưới dạng float, vì một trong các toán hạng là float (2.5).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; Dưới đây là một số quy tắc cho số nguyên:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Một số nguyên phải có ít nhất một chữ số&lt;/li&gt;&lt;li&gt;Một số nguyên KHÔNG được có dấu thập phân&lt;/li&gt;&lt;li&gt;Một số nguyên có thể là số dương hoặc số âm&lt;/li&gt;&lt;li&gt;Số nguyên có thể được chỉ định ở ba định dạng: thập phân (dựa trên 10), thập lục phân (dựa trên 16 - tiền tố là 0x) hoặc bát phân (dựa trên 8 - tiền tố là 0)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; PHP có các hằng số được xác định trước sau đây cho các số nguyên:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;PHP_INT_MAX - Số nguyên lớn nhất được hỗ trợ&lt;/li&gt;&lt;li&gt;PHP_INT_MIN - Số nguyên nhỏ nhất được hỗ trợ&lt;/li&gt;&lt;li&gt;PHP_INT_SIZE - Kích thước của một số nguyên tính bằng byte&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; PHP có các chức năng sau để kiểm tra xem kiểu của một biến có phải là số nguyên hay không:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;is_int ()&lt;/li&gt;&lt;li&gt;is_integer () - bí danh của is_int ()&lt;/li&gt;&lt;li&gt;is_long () - bí danh của is_int ()&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;strong&gt;Ví dụ 1:&amp;nbsp;&lt;br&gt;Kiểm tra xem kiểu của một biến có phải là số nguyên hay không:&lt;br&gt;&lt;/strong&gt;&lt;br&gt;&amp;lt;?php&lt;br&gt;$x =&amp;nbsp;5985;&lt;br&gt;var_dump(is_int($x));&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;59.85;&lt;br&gt;var_dump(is_int($x));&lt;br&gt;?&amp;gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;3. Số thực PHP (Floats) :&lt;br&gt;&lt;/strong&gt;&lt;br&gt;&lt;p&gt;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;-&amp;nbsp; Số thực là một số có dấu thập phân hoặc một số ở dạng số mũ.&lt;/span&gt;&lt;br&gt;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;-&amp;nbsp; 2.0, 256.4, 10.358, 7.64E + 5, 5.56E-5 đều là float.&lt;/span&gt;&lt;br&gt;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;-&amp;nbsp; Kiểu dữ liệu float thường có thể lưu trữ giá trị lên đến 1.7976931348623E + 308 (phụ thuộc vào nền tảng) và có độ chính xác tối đa là 14 chữ số.&lt;/span&gt;&lt;br&gt;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;-&amp;nbsp; PHP có các hằng số được xác định trước sau đây cho float (từ PHP 7.2):&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;PHP_FLOAT_MAX - Số dấu phẩy động có thể biểu diễn lớn nhất&lt;/li&gt;&lt;li&gt;PHP_FLOAT_MIN - Số dấu phẩy động dương nhỏ nhất có thể biểu diễn được&lt;/li&gt;&lt;li&gt;PHP_FLOAT_MAX - Số dấu phẩy động âm nhỏ nhất có thể biểu diễn&lt;/li&gt;&lt;li&gt;PHP_FLOAT_DIG - Số chữ số thập phân có thể được làm tròn thành số float và ngược lại mà không bị mất độ chính xác&lt;/li&gt;&lt;li&gt;PHP_FLOAT_EPSILON - Số dương nhỏ nhất có thể biểu diễn x, sao cho x + 1,0! = 1,0&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; PHP có các chức năng sau để kiểm tra xem kiểu của một biến có phải là float hay không:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;is_float ()&lt;/li&gt;&lt;li&gt;is_double () - bí danh của is_float ()&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;strong&gt;Ví dụ 2:&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Kiểm tra xem loại biến có phải là float hay không :&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&amp;lt;?php&lt;br&gt;$x =&amp;nbsp;10.365;&lt;br&gt;var_dump(is_float($x));&lt;br&gt;?&amp;gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;4. Số Vô Hạn&amp;nbsp;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;PHP (Infinity)&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;p&gt;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;-&amp;nbsp; Giá trị số lớn hơn PHP_FLOAT_MAX được coi là vô hạn.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; PHP có các chức năng sau để kiểm tra xem giá trị số là hữu hạn hay vô hạn:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;is_finite ()&lt;/li&gt;&lt;li&gt;is_infinite()&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; Tuy nhiên, hàm var_dump () trong PHP trả về kiểu dữ liệu và giá trị:&lt;/p&gt;&lt;strong&gt;Ví dụ 3:&lt;br&gt;Kiểm tra xem giá trị số là hữu hạn(finite) hay vô hạn(infinite):&lt;br&gt;&lt;/strong&gt;&lt;br&gt;&amp;lt;?php&lt;br&gt;$x =&amp;nbsp;1.9e411;&lt;br&gt;var_dump($x);&lt;br&gt;//xuất ra Float(INF) (vô hạn)&lt;br&gt;?&amp;gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;5 PHP NaN (kiểu số-không xác định)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; NaN là viết tắt của Not a Number.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; NaN được sử dụng cho các phép toán bất khả thi.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp; PHP có các chức năng sau để kiểm tra xem giá trị có phải là số không:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;is_nan ()&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;- Tuy nhiên, hàm var_dump () trong PHP trả về kiểu dữ liệu và giá trị:&lt;/p&gt;&lt;strong&gt;Ví dụ 4 :&lt;br&gt;&lt;/strong&gt;&lt;p&gt;&lt;strong&gt;Phép tính không hợp lệ sẽ trả về giá trị NaN:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&amp;lt;? php&lt;/p&gt;&lt;p&gt;$ x = acos (8);&lt;/p&gt;&lt;p&gt;var_dump ($ x);&lt;/p&gt;&lt;p&gt;//xuất ra : float(NAN)&lt;/p&gt;&lt;p&gt;?&amp;gt;&lt;/p&gt;&lt;strong&gt;6.&amp;nbsp;&lt;span style="font-size: calc(0.90375rem + 0.045vw);"&gt;Chuỗi số trong PHP (Numerical Strings)&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;p&gt;-&amp;nbsp; Hàm is_numeric () trong PHP có thể được sử dụng để tìm xem một biến có phải là số hay không. Hàm trả về true nếu biến là một số hoặc một chuỗi số, ngược lại là false.&lt;/p&gt;&lt;strong&gt;Ví dụ 5:&amp;nbsp;&lt;br&gt;Kiểm tra xem biến có phải là số không:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&amp;lt;?php&lt;br&gt;$x =&amp;nbsp;5985;&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;//xuất ra bool(true)&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;"5985";&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;//xuất ra bool(true)&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;"59.85"&amp;nbsp;+&amp;nbsp;100;&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;//xuất ra bool(true)&lt;br&gt;&lt;br&gt;$x =&amp;nbsp;"Hello";&lt;br&gt;var_dump(is_numeric($x));&lt;br&gt;//xuất ra bool(false)&lt;br&gt;?&amp;gt;&lt;br&gt;&lt;strong&gt;note &lt;/strong&gt;: Từ PHP 7.0: Hàm is_numeric () sẽ trả về FALSE cho các chuỗi số ở dạng thập lục phân (ví dụ: 0xf4c3b00c), vì chúng không còn được coi là chuỗi số nữa.&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;7. PHP Casting Strings và Floats to Integers&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;Đôi khi bạn cần truyền một giá trị số sang một kiểu dữ liệu khác.&lt;/li&gt;&lt;li&gt;Hàm (int), (integer) hoặc intval () thường được sử dụng để chuyển đổi một giá trị thành một số nguyên.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Ví dụ 6 :&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Truyền float và string thành số nguyên:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&amp;lt;? php&lt;/p&gt;&lt;p&gt;// Truyền float sang int&lt;/p&gt;&lt;p&gt;$ x = 23465,768;&lt;/p&gt;&lt;p&gt;$ int_cast = (int) $ x;&lt;/p&gt;&lt;p&gt;echo $ int_cast;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;echo "&amp;lt;br&amp;gt;";&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;// Truyền chuỗi thành int&lt;/p&gt;&lt;p&gt;$ x = "23465.768";&lt;/p&gt;&lt;p&gt;$ int_cast = (int) $ x;&lt;/p&gt;&lt;p&gt;echo $ int_cast;&lt;/p&gt;&lt;p&gt;?&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;/p&gt;</content>
    <contentformat>1</contentformat>
    <legacyfiles>0</legacyfiles>
    <legacyfileslast>$@NULL@$</legacyfileslast>
    <display>5</display>
    <displayoptions>a:2:{s:10:"printintro";s:1:"0";s:17:"printlastmodified";s:1:"0";}</displayoptions>
    <revision>1</revision>
    <timemodified>1668006513</timemodified>
  </page>
</activity>